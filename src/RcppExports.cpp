// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// standarize_mat
void standarize_mat(const int& nobs, const int& nvar, NumericMatrix& x, NumericVector& w, const bool& isd, const bool& intr, NumericVector& xm, NumericVector& xv, NumericVector& xs);
RcppExport SEXP _hierr_standarize_mat(SEXP nobsSEXP, SEXP nvarSEXP, SEXP xSEXP, SEXP wSEXP, SEXP isdSEXP, SEXP intrSEXP, SEXP xmSEXP, SEXP xvSEXP, SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int& >::type nobs(nobsSEXP);
    Rcpp::traits::input_parameter< const int& >::type nvar(nvarSEXP);
    Rcpp::traits::input_parameter< NumericMatrix& >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const bool& >::type isd(isdSEXP);
    Rcpp::traits::input_parameter< const bool& >::type intr(intrSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xm(xmSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xv(xvSEXP);
    Rcpp::traits::input_parameter< NumericVector& >::type xs(xsSEXP);
    standarize_mat(nobs, nvar, x, w, isd, intr, xm, xv, xs);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_hierr_standarize_mat", (DL_FUNC) &_hierr_standarize_mat, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_hierr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
